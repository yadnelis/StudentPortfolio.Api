// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentPortfolio.API.Infrastructure;

#nullable disable

namespace StudentPortfolio.API.Migrations
{
    [DbContext(typeof(StudentPortfolioContext))]
    [Migration("20251008003143_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("StudentPortfolio.API.Models.Entities.Acknowledgement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("CompetitionName")
                        .HasColumnType("tinytext")
                        .HasColumnName("competition_name");

                    b.Property<byte?>("CompetitionPosition")
                        .HasColumnType("tinyint UNSIGNED")
                        .HasColumnName("competition_position");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<ulong>("Deleted")
                        .HasColumnType("bit")
                        .HasColumnName("deleted");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Description")
                        .HasColumnType("mediumtext")
                        .HasColumnName("description");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<string>("OtherType")
                        .HasColumnType("tinytext")
                        .HasColumnName("other_type");

                    b.Property<string>("Place")
                        .HasColumnType("tinytext")
                        .HasColumnName("place");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("char(36)")
                        .HasColumnName("student_id");

                    b.Property<string>("StudentOrganizatonName")
                        .HasColumnType("tinytext")
                        .HasColumnName("student_organizaton_name");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint UNSIGNED")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_acknowledgements");

                    b.HasIndex("StudentId")
                        .HasDatabaseName("ix_acknowledgements_student_id");

                    b.ToTable("acknowledgements", (string)null);
                });

            modelBuilder.Entity("StudentPortfolio.API.Models.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<ulong>("Deleted")
                        .HasColumnType("bit")
                        .HasColumnName("deleted");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Institution")
                        .HasColumnType("tinytext")
                        .HasColumnName("institution");

                    b.Property<string>("InstitutionalId")
                        .HasColumnType("tinytext")
                        .HasColumnName("institutional_id");

                    b.Property<string>("LastName")
                        .HasColumnType("tinytext")
                        .HasColumnName("last_name");

                    b.Property<string>("Name")
                        .HasColumnType("tinytext")
                        .HasColumnName("name");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.HasKey("Id")
                        .HasName("pk_students");

                    b.ToTable("students", (string)null);
                });

            modelBuilder.Entity("StudentPortfolio.API.Models.Entities.Acknowledgement", b =>
                {
                    b.HasOne("StudentPortfolio.API.Models.Entities.Student", "Student")
                        .WithMany("Acknowledgements")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_acknowledgements_students_student_id");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("StudentPortfolio.API.Models.Entities.Student", b =>
                {
                    b.Navigation("Acknowledgements");
                });
#pragma warning restore 612, 618
        }
    }
}
